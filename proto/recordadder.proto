syntax = "proto3";

package recordadder;

option go_package = "github.com/brotherlogic/recordadder/proto";

message Queue {
  repeated AddRecordRequest requests = 1;
  int32 processed_records = 2;
  int64 last_addition_date = 3;
  int64 last_digital_addition = 4;
  repeated AddedRecord added = 5;
} 

message AddedRecord {
  int32 instance_id = 1;
  int64 date_added = 2;
}

message AddRecordRequest {
  int32 id = 1;
  int32 cost = 2;
  int32 folder = 3;
  int32 accounting_year = 5;
  int32 reset_folder = 4;
  bool arrived = 6;
  int64 date_added = 7;
}

message AddRecordResponse {
  int64 expected_addition_date = 1;
}

message ListQueueRequest {}

message ListQueueResponse {
  repeated AddRecordRequest requests = 1;
}

message UpdateRecordRequest {
  int32 id = 1;
  bool available = 2;
}

message UpdateRecordResponse {
}

message DeleteRecordRequest{
  int32 id = 1;
}

message DeleteRecordResponse{}

service AddRecordService {
  rpc AddRecord(AddRecordRequest) returns (AddRecordResponse) {};
  rpc ListQueue(ListQueueRequest) returns (ListQueueResponse) {};
  rpc UpdateRecord(UpdateRecordRequest) returns (UpdateRecordResponse) {};
  rpc DeleteRecord(DeleteRecordRequest) returns (DeleteRecordResponse) {};
}

message ClientAddUpdateRequest {
  int32 id = 1;
}

message ClientAddUpdateResponse {}

service ClientAddUpdateService {
  rpc ClientAddUpdate(ClientAddUpdateRequest) returns (ClientAddUpdateResponse) {};
}